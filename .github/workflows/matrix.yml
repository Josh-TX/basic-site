name: Matrix

on:
  workflow_dispatch:
    inputs:
      SemVer:
        description: 'Semantic Version of the release'
        required: true

env:
  #these should match the output of the electron build
  WIN_FILENAME: my-angular-app Setup 0.0.0.exe
  WIN-P_FILENAME: my-angular-app 0.0.0.exe
  LIN_FILENAME: my-angular-app-0.0.0.AppImage
  MAC_FILENAME: my-angular-app-0.0.0-arm64.dmg


jobs:
  build-angular:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install
      working-directory: my-angular-app

    - name: Build
      run: npm run build
      working-directory: my-angular-app

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: angular-files
        path: 'my-angular-app/dist/browser'
  build-electron:
    needs: build-angular

    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macOS-latest
        - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: angular-files
        path: my-angular-app/dist/browser/

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install --only=dev
      working-directory: my-angular-app

    - name: Build Electron
      run: npm run publish-electron
      working-directory: my-angular-app

    - name: Upload Windows artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.WIN_FILENAME }}
        path: 'my-angular-app/out/${{ env.WIN_FILENAME }}'

    - name: Upload Windows-Portable artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: win-p
        path: 'my-angular-app/out/${{ env.WIN-P_FILENAME }}'

    - name: Upload Linux artifact
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: lin
        path: 'my-angular-app/out/${{ env.LIN_FILENAME }}'
    
    - name: Upload Mac artifact
      if: matrix.os == 'macOS-latest'
      uses: actions/upload-artifact@v4
      with:
        name: mac
        path: 'my-angular-app/out/${{ env.MAC_FILENAME }}'

  release: 
    needs: build-electron
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: CHANGELOG.md

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: dist
    - run: ls -l dist

    - name: Rename WIN file
      run: mv 'dist/win/${{ env.WIN_FILENAME }}' 'dist/my-angular-app v${{ github.event.inputs.SemVer }} Setup.exe'
    - name: Rename WIN-P file
      run: mv 'dist/win-p/${{ env.WIN-P_FILENAME }}' 'dist/my-angular-app v${{ github.event.inputs.SemVer }} Portable.exe'
    - name: Rename LIN file
      run: mv 'dist/lin/${{ env.LIN_FILENAME }}' 'dist/my-angular-app-v${{ github.event.inputs.SemVer }}.AppImage'
    - name: Rename MAC file
      run: mv 'dist/mac/${{ env.MAC_FILENAME }}' 'dist/my-angular-app-v${{ github.event.inputs.SemVer }}-arm64.dmg'

    - name: Echo out 
      run: ls -l dist

    - name: Create Release (softprops)
      uses: softprops/action-gh-release@v2
      with:
        name: Release v${{ github.event.inputs.SemVer }}
        tag_name: v${{ github.event.inputs.SemVer }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body_path: CHANGELOG.md
        files: dist/*
